name: CI/CD Production
on:
  push:
    # branches: [main]

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY_FASTAPI_MONGO }}
  LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_FASTAPI_MONGO }}

jobs:
  ci-cd:
    name: Deploy to ECR and update Lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read Python version
        id: read-python-version
        run: |
          echo "PYTHON_VERSION=$(cat .python-version)" >> "$GITHUB_ENV"

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        run: |
          # Build a docker container and push it to ECR
          echo "Registry: ${{ env.ECR_REGISTRY }}"
          echo "Repository: ${{ env.ECR_REPOSITORY }}"
          echo "Using Python version: ${{ env.PYTHON_VERSION }}"
          docker buildx build \
            --platform linux/arm64 \
            --build-arg PYTHON_VERSION=${{ env.PYTHON_VERSION }} \
            --provenance=false \
            -t ${{ env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:latest \
            --push .
          echo "name=image::${{ env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:latest" >> $GITHUB_OUTPUT

      - name: Update AWS Lambda function
        id: update-lambda
        run: |
          aws lambda update-function-code --function-name ${{ env.LAMBDA_FUNCTION_NAME }} --image-uri ${{ env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY}}:latest
